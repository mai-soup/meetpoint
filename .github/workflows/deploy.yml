name: Deploy to Amazon Elastic Beanstalk

on:
  push:
    branches:
      - master

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY_SERVER: meetpoint-server
  ECR_REPOSITORY_CLIENT: meetpoint-client
  EB_APP_NAME: MeetPoint
  EB_ENV_NAME: Meetpoint-env
  S3_BUCKET_NAME: meetpoint-deployment
  DOCKERRUN_FILE: "Dockerrun.aws.json"

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push server image to Amazon ECR
        run: |
          cd server
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_SERVER }}:${{ github.sha }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_SERVER }}:${{ github.sha }}

      - name: Build, tag, and push client image to Amazon ECR
        run: |
          cd client
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_CLIENT }}:${{ github.sha }} .
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_CLIENT }}:${{ github.sha }}

      - name: Update Dockerrun file with new image URIs
        run: |
          sed -i 's@MY_ECR_REPOSITORY_SERVER@${{ env.ECR_REPOSITORY_SERVER }}:${{ github.sha }}@' ${{ env.DOCKERRUN_FILE }}
          sed -i 's@MY_ECR_REPOSITORY_CLIENT@${{ env.ECR_REPOSITORY_CLIENT }}:${{ github.sha }}@' ${{ env.DOCKERRUN_FILE }}

      - name: Deploy to Elastic Beanstalk
        run: |
          sudo apt-get install -y jq
          aws s3 cp ${{ env.DOCKERRUN_FILE }} s3://${{ env.S3_BUCKET_NAME }}/${{ github.sha }}/${{ env.DOCKERRUN_FILE }}
          aws elasticbeanstalk create-application-version --application-name ${{ env.EB_APP_NAME }} --version-label ${{ github.sha }} --source-bundle S3Bucket=${{ env.S3_BUCKET_NAME }},S3Key=${{ github.sha }}/${{ env.DOCKERRUN_FILE }}
          aws elasticbeanstalk update-environment --application-name ${{ env.EB_APP_NAME }} --environment-name ${{ env.EB_ENV_NAME }} --version-label ${{ github.sha }}

